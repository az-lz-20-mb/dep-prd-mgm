name: Terraform State Management

on:
  push:

jobs:
  # First job: List Terraform State
  terraform-state-list:
    uses: az-lz-20-mb/tmp-sha-pip/.github/workflows/unlock-template.yml@main
    with:
      module_directory: "terraform/modules/management-groups"
      terraform_version: '1.9.2'
      lock_id: ''  # If listing state doesn't require a lock_id, ensure your template handles this.
    secrets:
      azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  # Second job: Unlock Terraform State
  terraform-state-unlock:
    needs: terraform-state-list  # Ensures that unlock only runs after list succeeds
    uses: az-lz-20-mb/tmp-sha-pip/.github/workflows/unlock-template.yml@main
    with:
      module_directory: "terraform/modules/management-groups"
      terraform_version: '1.9.2'
      lock_id: '${{ needs.terraform-state-list.outputs.lock_id }}'  # Assuming the first job outputs the lock ID
    secrets:
      azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
